#+STARTUP: overview
#+STARTUP: hidestars

* BUGS
  - διαιτάω
  - ἐνδύω
  - καθαρῶ - неверный ответ - д.б. fut καθαίρω
  -

* 7 сент
  - пока что больше багов, чем результатов
  - ἀνάπτω - ἀν-άπ-τ-ω
  - если нет решения с pref, нужно как-то оставить длинные стемы
  - =========== καταδύω - BAG!!!

* 12 августа verbs - второй запрос в сложной форме - πυνθάνομαι
  - или добавить trns везде? Тогда не будет однокоренных
  - а второй запрос - когда и где его делать?

* = формат results
verb: _chain: [
  { seg: 'ἀ', aug: true },
  {
    seg: 'γαθοεργ',
    cdict: {
      verb: true,
      rdict: 'ἀγαθοεργέω',
      dict: 'ἀγαθοεργέω',
      type: 'έω',
      regstem: 'γαθοεργ',
      stem: 'γαθοεργ',
      keys: [Array],
      trns: [Array],
      augs: [Array],
      forms: [Array],
      dname: 'wkt'
    },
    mainseg: true
  },
  { seg: 'έω', fls: [ [Object], [Object] ] }
]
_res: [
  {
    segs: 'ἀ-γαθοεργ-έω',
    rdict: 'ἀγαθοεργέω',
    stem: 'γαθοεργ',
    fls: '["act.pres.ind.sg.1","act.pres.sub.sg.1"]'
  }
]


* 8 августа - собираю все вместе
  - [X] name, verb, term
  - [ ] prettyRes terms поправить
  - [ ]

* 25 мая - вчерне готово
  - [X] тесты simple и verb.fls start
  - [X] part.terms в файл
  - [ ] name снова
  - [ ] participle, inf
  - [ ] test compound
  - [ ] lsj, souda
  - [ ] adj
  - [ ] все тесты
  - [ ]


* select dicts  = wkts + lsjs
  - нет prefs, нет tail, т.е. simple -
  -
  - filter by fls - by keys
  - точные wkts - есть:
  - каждому wkt - точные lsjs - type, stem, aug, pos, [gends]
  - однокоренные - cognates - only stem ?
  -
  - точных wkts - нет:
  - wkts+lsjs - stem, type, aug + fls by type
  -
  - prefs, нет tail = pref + simple
  -
  - compound:
  - head + tail
  - prefs + head + tail
  -
  - и для head и tail - так же cognates
  -

* == однокоренные - aug, stem, type
  - у меня ἀ-δάμ-αντι, в lsjs искать aug ἀ, stem δαμ, type ας

* 22 апреля
  - cdicts - убрать клонирование, сделать массив [dics, fls] - с равным количеством строк для соответствия
  - == NB большая задача - добавить LSJ, в WKT слабый словарный состав, нет διαιρέω

* 16 апр - схема:
  - убрать глобальный dag ?
  - prefs - цикл, в цикле
    - находим tail и beg
    - если beg=vow, то aug
    - combineChain

* 15 апреля
  - добавил compound-prefs, определяет - ἀντιπαρα-γράφω - длиннейший
  - [ ] цикл, все prefs
  - [ ] пример на a-ap-apo- все три м.б. нужны в разных словах, хотя длиннейший - apo
  - [ ] добавить a- в simple-prefs
  - [ ]

* 9 апреля - два вида словарей
  - wkt - точное определение morphs, и точные однозначные тесты. "В results все значения верные"
  - словари в две колонки, т.е. без списка keys для фильтрации flexes. Соотв, в morphs м.б. лишние значения. "В results есть, среди прочих, и верные значения"
  - ==> нужно написать механизм работы с пользовательскими словарями. Включая lsj?
  -

* 3 апреля - prefs - рекурсия или матрица?
  - матрица: breaks, как со стемами
  - рекурсия, все описанные случаи
  - просто таблица всех комбинированных префиксов - надежно и просто, но будет 2 запроса, если compound-prefs
  - м.б. несколько соединительных гласных - ἐν-αντ-ιο-γνώμων = -ιο- = не проблема, long-aug - NB - проверить

* таблица комбинированных префиксов
  - ясно, что граф возникает в любом случае. М.б. ἀπο-, ἀπ-, ἀ-, когда слово начинается с ἀπ-
  - все же идея отдельно вычислять prefs - не плохая
  - перечисляю все составные prefs
  - dag.prefs - а дальше цикл по prefs -> dag.chains
  - выбор лучшего
  -


* 2 апреля - prefs
  - м.б. случаи:
  - pref + vow + stem = ἀνταναλίσκω, ἀντιβάλλω, ἀντεγγράφω / vow=aug+verb
  - pref + vow + vow=aug + stem = πρ-ο-α-ναλίσκω
  - pref + pref + vow + stem = ἀντ-επ-ι-βουλεύω
  - pref + vow + pref + vow + stem = ἀντ-ι-δι-α-γράφω, ἀντ-ι-προσ-εῖπον => εῖπον - не определяет
  - pref найден, но по ошибке - ἀντλέω
  - vow мб. несолько символов - ἀρχ-αϊ-σμός, πρ-ο-αι-ρέω, πρ-ο-αν-αι-ρέω
  - == итого:
  -
  - ищу pref, затем
  - снова pref, но без придыхания
  - либо vow и снова pref
  - либо vow = aug, если verb - есть ли пример на name
  - затем stem

* 22 марта 2022
  - нужно восстановить весь алгоритм anthrax и его описать
  - 1. terms - неизменяемые
  - 2. flakes - разбиения

* 22 марта 2022
  - [ ] adjs - ἀμφίβραχυς - не работает
  - [ ] = чистку и описание кода начать отсюда

* 12 feb - tests
  - ἄκορον - два значения, нужны оба
  - [X] names
  - [ ] name ᾠδή - затык
  - [ ] terms <<=== next step
  - [ ] adjs
  - [ ] verbs

* 12 feb - note on accents
  - нужно имень не только позицию акцента, но и его тип. - только для тестов
  - а чтобы определялись слова с не очень верным акцентом, как раз не нужно
  -

* 12 февраля = accents =  новое правило:
  accents:
        - 3 syllables - ac: 321, cf: 21, gr: 1
        - cf - long or diphtong
        - длина ultima: -αι and ‐οι as endings = short. (except in the optative mood of verbs).
        - ‐οις, ‐αις are long and that ‐οι‐, ‐αι‐ in other positions are long
        -
        - noun accent: persistent; first declension have the circumflex on the ultima in the genitive plural
        - 1. remains there, except in the genitive plural (1-decl)
        - 2. (1,2-d), ultima - cf. in gen, dat, sg&pl.
        - 3.a ultima short - penult long+accented = penult-cf
        - 3.b ultima long - as are ‐ου, ‐ῳ, ‐αις, ‐οις, ‐ους, ‐ων - the accent changes from the circumflex to the acute
        - 4. antepenult - only if ultima short
        -
          ==== новое правило:
          - md5 создается не из fls.map.terms, а из fls.map.term-stress
          - это точно соответствует wiki-данным, но не следует классическим правилам, если есть расхождение с вики
          -
          - ==== можно предусмотреть мягкий вариант, когда результат вычисляется по классическим правилам, но не соответствует wiki
          - Как если бы в wiki вносились исправления
          - я не знаю, почему в wiki есть расхождения
          - текущий вариан вычисления ключа ~/greek/Dicts/wkt/makeName.js: let keymd5 = gendfls.map(flex=> [flex.term, flex.stress].join('-')).join('-') // exact key for wiktionary data
          -
          - === нужно предусмотреть вариант, учитывающий возможные ошибки в положении акцента
          - как пока непонятно

        исключения:
        ἄκανθα
        ἀκράτεια: ἀκρατεία - это просто ошибка, д.б. ἀκράτεια, исправить по правилу
        ἀκρεμών
        ἀκρόπολις / ἀκροπόλει
        βιβλιοπώλης

* = syllables
  - a single consonant between two vowels - breaks
  - any group of consonants that can begin a word - breaks
  -  if the group of consonants cannot begin a word, it is divided, as are double consonants

* 12 февраля - почему нельзя добавить dict или stem во flex
  ахренеть, оказывается, keys и md5 не нужны, совсем. Вот это сюрприз ========= surprise!
  но тогда я просто сохраняю в базу все слова как они есть, ничего не группируя - wkt проходит красиво, но
  нет - тогда не пройдут значения из LSJ и других словарей, вот в чем дело, даже стем добавлять нельзя. а md5 совпадает

* 11 февраля, после free-ipa - ό и ό
  - разные ό и ό - оба символа слитные, но разные, orthos отрабатывает ok
* TODO 21 января - finish start
  - [ ] names - tests - до необходимости добавить adj
  - [ ]
  - [ ]
  - [ ] simple? - требуется compounds

* TODO 26 дек
  - = wkt.dict:
  - [ ] verb.infs
  - [ ] verb.parts
  - [ ] adjectives
  - [ ] participles
  - [ ] = tests

* ἀήρ - BUG! и в словаре plain пустой - добавить в irregs? Как?

* ἀθανασία - не видит restrict - sg - причем в словаре

* = проблема = anthrax видит значения flex из adj, т.е. к name добавляется чужой gend
  = решение - создавать cache по всем источникам тестов, wkt_name, wkt_adj, etc

* = проблема = тесты name - появляется неверное значение из verb
  ἆθλον - ἄθλου - но в verb ἀθλέω нет imp окончания ου, правильный imp - ᾱ̓θλοῦ
  то есть в глаголах также нужны fullkeys
  иначе проникают лишние значения

* θρίξ - как быть
  - две записи dict. Одна прямая, другая - ref, и второй запрос
  - ὄψ - то же
  -
    // todo: FAIL ᾄδω - ᾖσθα - не уничтожается perispomenon - ᾖσθαι
    // if (aplain == 'ε') log('_________________ AUG:', aplain, 'AUG', aug)
    // if (aplain == 'εβανθ')
    // log('_________________aplain, aug', aplain, pfirst, second, ':', aug)


* = descr = anthrax заново, "обход графа"
  - сервер словарей + анализатор в консоли
  - сегменты - plain
  - возможные флексии
  - флексии вычисляются также как начальные сегменты, но с конца
  - поиск первых сегментов в словаре стемов
  - в словаре FC
  - вычисление остатков с учетом соединительных гласных
  - снова стемы + SC
  - повторить до совпадения полной цепочки, включая флексию, с исходной формой
  - в словаре Wkt проверяются ключи. Если есть wkt-dict, то в остальных словарях искать только этот же dict
  - показать все варианты полных цепочек

* = descr v.2 ??
  - вопрос: или встроить pouch? или morph-server-fetch? Или pouch, клонируемый из morph-server?
  - для fanki-web достаточно сервера. Для десктопов нужен pouch
  -


* = BIG ARCH =
  - обработка enclitics
  - поиск term = indeclinable
  - simple = stem+term
  - simple-compound
  - no simple - simple-compound в цикле с кешем DAG
  -

* = descr = сначала flex
  - работать нужно отбрасывая flex, начиная с самого длинного flex - см. δυναμέναις - уходит в цикл, хотя есть простой вариант part.
  - и любой простой случай с длинным flex, который иначе будет найдет после большой рекурсии
  - 1. - поиск simple = stem+term
  - 2. - разбор sumple как компаунда
  - 3. - simple не найден: βαρύτονος
  - 3.a - определение префиксов (тут акценты влияют)
  - 3.b - break 2 parts
  -



* stemmer - anthrax - descr
  - keys: tails - запрос к db-pouch
  - morph-server отвечает
  - db-flex
  - array: stem+flex=wf
  -

* TODO NOW
  - [ ] augs - αἰ, etc
  - [ ] словари: утилиты для чтения текстовых файлов и записи в json
  - [ ] tests
  - [ ] a) форма chain
  - [ ] b) тесты под эту форму
  - [ ] c) fls почистить
  - [ ]



* ??? τόνος - τονος - разные результаты

* = compounds - какие бывают, как строятся
  - fc - любые noun-verb
  - sc - verb + flex.verb, flex.name - определенный набор keys - ος, -της, -τηρ/τωρ, -ής
  - sc - name + flex.name
  -
  - vow - o - stem без aug
  - a - aug-a+stem
  - η - a+stem

* SC - vow
  - οἶ - οι
  - - - ί (ναυσίπορος, ὁδοιπόρος)
  - - - υ - ναυμαχέω

  - σι +

    - κακοῦργος = κακός + ἔργον
    - παν-οῦργος = παν + ἔργον
    - οῦ = ός + ἔ
    -
    - τῑμωρός = τιμάω + οὖρος
    - ω = άω + οὖ
    -
    - στρατ-ηγός = στρατός + ἄγω
    - -η- = ός + ἄ
    - λοχ-ᾱγός = λόχος + ᾱγός-ἄγω
    - ᾱ- = ος + ἄ-
    -
    - ναυ-μάχος = ναῦς + μάχος-μάχομαι
    - υ- = ῦς + -
    - τριήρης = τρεῖς + ἀραρίσκω



* = wkt-dict
  - словарь стемов
  - = главный словарь - wkt + малые словари
  - плюс компоненты составных  слов, FC, SC
  - плюс все формы гллаголов
  - = словарь флексий
  - = словарь неизменяемых форм, включая местоимения и т.д.
  - [ ] писать json в файл
  - [ ] создать pouch
  - [ ]

* = BUGS - проблемы, ошибки, баги
  - μῆτις в wkt - два раза, ις-ιος и ς-δος
  - ===>> βαρύτης должен иметь stem βαρ-ύτης, или βαρύ-της, а не βαρύτη - ибо compound βαρύ-τονος + τόνος,
  - === а это значит переделать всю заливку словарей <<===
  - === нужно искать суффиксы перед вычислением стема ===
  - αἰγίοχος - то же самое - αἰγίς - стем д.б. αἰγ-ίς, а не αἰγί-ς
  - οὐρανός нету =  +‎ σκοπέω = οὐρανοσκόπος -
  - AUGS - οὐ - ρανός

* = BUG = wktDict - неправильно считается aug в εἶπον - aor, ἐ, д.б. εἰ
  - только aor - εἶπον
  - υἱός - не найден

* παυσίλυπη - παυσίλυπος
  παυσίλυπη - считает, поскольку λύπη, а на ος - нет
  - это значит что, не проверять doc2flex в случае compound? Выходит, так
  - к этому нужно просто привыкнуть <<<====

* ὀρνιθόγαλον = ὄρνις +‎ γάλα = θό, кроме si
